name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Log in to AWS
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID
          aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY
          aws configure set default.region us-east-1

      - name: Deploy Infrastructure (Terraform)
        run: |
          cd terraform
          terraform init
          terraform apply -auto-approve

      - name: Get ECR Repository URL
        id: ecr
        run: |
          ECR_REPOSITORY_URL=$(terraform output -raw ecr_repository_url)
          echo "ECR_REPOSITORY_URL=$ECR_REPOSITORY_URL" >> $GITHUB_ENV
          echo "ECR_REPOSITORY_URL: $ECR_REPOSITORY_URL"  # Debugging: log the URL

      - name: Build Docker Image
        run: |
          echo "ECR_REPOSITORY_URL: $ECR_REPOSITORY_URL"  # Debugging: log the URL before use
          docker build -t my-app -f ./app/Dockerfile ./app
          docker tag my-app:latest ${{ env.ECR_REPOSITORY_URL }}:latest  # Correct format for tagging

      - name: Log in to ECR
        run: |
          echo "ECR_REPOSITORY_URL: $ECR_REPOSITORY_URL"  # Debugging: log the URL before login
          aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin ${{ env.ECR_REPOSITORY_URL }}

      - name: Push Docker Image to ECR
        run: |
          echo "ECR_REPOSITORY_URL: $ECR_REPOSITORY_URL"  # Debugging: log the URL before pushing
          docker push ${{ env.ECR_REPOSITORY_URL }}:latest
